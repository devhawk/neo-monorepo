name: .NET Core Test and Publish

on:
  push:
    branches: master
  pull_request:

env:
  DOTNET_VERSION: 3.1.100

jobs:

  Test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Check format
      run: |
        dotnet tool install --version 3.2.111002 --tool-path ./ dotnet-format --add-source https://dotnet.myget.org/F/format/api/v3/index.json
        ./dotnet-format --check --dry-run -v diagnostic
    - name: Add package coverlet.msbuild
      run: find tests -name *.csproj | xargs -I % dotnet add % package coverlet.msbuild
    - name: Test Neo.Compiler.MSIL.UnitTests
      run: dotnet test tests/Neo.Compiler.MSIL.UnitTests /p:CollectCoverage=true /p:CoverletOutput=${GITHUB_WORKSPACE}/coverage/ /p:Exclude=\"[Neo.SmartContract.*]*,[Neo.Compiler.MSIL.UnitTests]*,[Neo.Compiler.MSIL.UnitTests.*]*\"
    - name: Test Neo.SmartContract.Framework.UnitTests
      run: dotnet test tests/Neo.SmartContract.Framework.UnitTests /p:CollectCoverage=true /p:CoverletOutput=${GITHUB_WORKSPACE}/coverage/lcov /p:MergeWith=${GITHUB_WORKSPACE}/coverage/coverage.json /p:Exclude=\"[Neo.SmartContract.*]*,[Neo.Compiler.MSIL.UnitTests]*,[Neo.Compiler.MSIL.UnitTests.*]*\" /p:CoverletOutputFormat=lcov
    - name: Test Template.NEP5.UnitTests
      run: dotnet test tests/Template.NEP5.UnitTests  /p:CollectCoverage=true /p:CoverletOutput=${GITHUB_WORKSPACE}/coverage/lcov /p:MergeWith=${GITHUB_WORKSPACE}/coverage/coverage.json /p:Exclude=\"[Neo.SmartContract.*]*,[Neo.Compiler.MSIL.UnitTests]*,[Neo.Compiler.MSIL.UnitTests.*]*\" /p:CoverletOutputFormat=lcov
    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

  PublishGithub:
    # Because sometimes this action is not working as expected we will disable it until determine that it's more stable
    if: false && github.ref == 'refs/heads/master' && startsWith(github.repository, 'neo-project/')
    needs: Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Setup NuGet.exe for use with actions
      uses: NuGet/setup-nuget@v1
    - name: Pack with dotnet
      run: git rev-list --count HEAD | xargs printf "CI%05d" | xargs dotnet pack src/Neo.SmartContract.Framework -c Debug -o out --include-source --version-suffix
    - name: Publish to Github Packages
      run: |
        nuget source Add -Name "GitHub" -Source "https://nuget.pkg.github.com/neo-project/index.json" -UserName neo-project -Password ${GITHUB_TOKEN}
        nuget push out/*.nupkg -Source "GitHub"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  PublishMyGet:
    if: github.ref == 'refs/heads/master' && startsWith(github.repository, 'neo-project/')
    needs: Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Pack with dotnet
      run: git rev-list --count HEAD |xargs printf "CI%05d" |xargs dotnet pack src/Neo.SmartContract.Framework -c Debug -o out --include-source --version-suffix
    - name: Publish to MyGet
      run: dotnet nuget push out/*.nupkg -s https://www.myget.org/F/neo/api/v2/package -k ${MYGET_TOKEN} -ss https://www.myget.org/F/neo/symbols/api/v2/package -sk ${MYGET_TOKEN}
      env:
        MYGET_TOKEN: ${{ secrets.MYGET_TOKEN }}
